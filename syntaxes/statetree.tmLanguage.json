{
  "name": "statetree",
  "scopeName": "source.statetree",
  "fileTypes": [
    ".statetree"
  ],
  "patterns": [
    {
      "include": "#statements"
    }
  ],
  "repository": {
    "statements": {
      "patterns": [
        {
          "include": "#comments"
        },
        {
          "include": "#statemachine-name"
        },
        {
          "include": "#initialState"
        },
        {
          "include": "#states-statement"
        }
      ]
    },
    "statemachine-name": {
      "match": "s*(statemachine) ([_a-zA-Z][\\w_]*)",
      "captures": {
        "1": {
          "name": "storage.type.class"
        },
        "2": {
          "name": "support.type"
        }
      }
    },
    "initialState": {
      "match": "s*(initialState) ([_a-zA-Z][\\w_]*)",
      "captures": {
        "1": {
          "name": "variable.other.constant"
        },
        "2": {
          "name": "variable.other.enummember"
        }
      }
    },
    "sequence-event": {
      "match": "(\\()(.*?)(\\))",
      "begin": "^",
      "captures": {
        "1": {
          "name": "meta.brace.round.js"
        },
        "2": {
          "name": "entity.name.function.statetree"
        },
        "3": {
          "name": "meta.brace.round.js"
        }
      },
      "end": "\\)",
      "endCaptures": {
        "0": {
          "name": "meta.brace.round.js"
        }
      },
      "patterns": [
        {
          "match": "[_a-zA-Z][\\w_]*",
          "name": "entity.name.function.statetree"
        }
      ]
    },
    "states-block": {
      "name": "states-block.expr.js",
      "patterns": [
        {
          "include": "#state-body"
        }
      ]
    },
    "case-clause": {
      "name": "case-clause.expr.js",
      "begin": "(?<!\\.|\\$)\\b(case|default(?=:))\\b(?!\\$)",
      "beginCaptures": {
        "1": {
          "name": "keyword.control.states.js"
        }
      },
      "end": ":",
      "endCaptures": {
        "0": {
          "name": "punctuation.definition.section.case-statement.js"
        }
      },
      "patterns": [
        {}
      ]
    },
    "states-statement": {
      "name": "states-statement.expr.js",
      "begin": "(states|sequence)",
      "end": "(loop|end)",
      "beginCaptures": {
        "0": {
          "name": "keyword.control.states.statetree"
        }
      },
      "endCaptures": {
        "0": {
          "name": "keyword.control.states.statetree"
        }
      },
      "patterns": [
        {
          "include": "#sequence-event"
        },
        {
          "include": "#state-name"
        },
        {
          "include": "#state-block"
        }
      ]
    },
    "state-body": {
      "patterns": [
        {
          "include": "#state-block"
        }
      ]
    },
    "transition-statement": {
      "patterns": [
        {
          "include": "#prefix-transition-statement"
        },
        {
          "include": "#midfix-transition-statement"
        }
      ]
    },
    "prefix-transition-statement": {
      "match": "\\s*(on)\\s*([_a-zA-Z][\\w_]*)\\s*(=>|go)?\\s*(\\w*)\\s*",
      "captures": {
        "1": {
          "name": "storage.type.function.arrow.js"
        },
        "2": {
          "name": "entity.name.function.statetree"
        },
        "3": {
          "name": "storage.type.function.arrow.js"
        },
        "4": {
          "name": "variable.other.enummember"
        }
      }
    },
    "midfix-transition-statement": {
      "match": "\\s*([_a-zA-Z][\\w_]*)\\s*(=>|go)\\s*(\\w*)\\s*",
      "captures": {
        "1": {
          "name": "entity.name.function.statetree"
        },
        "2": {
          "name": "storage.type.function.arrow.js\""
        },
        "3": {
          "name": "variable.other.enummember"
        }
      }
    },
    "state-name": {
      "match": "[_a-zA-Z][\\w_]*",
      "name": "variable.other.enummember"
    },
    "state-block": {
      "begin": "\\{",
      "end": "\\}",
      "patterns": [
        {
          "include": "#transition-statement"
        },
        {
          "include": "#state-body"
        },
        {
          "include": "#states-statement"
        }
      ]
    },
    "id": {
      "match": "[_a-zA-Z][\\w_]*"
    },
    "comments": {
      "patterns": [
        {
          "begin": "#",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.statetree"
            }
          },
          "end": "(?=$)",
          "name": "comment.line.statetree"
        },
        {
          "name": "comment.block.statetree",
          "begin": "/\\*",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.statetree"
            }
          },
          "end": "\\*/",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.comment.statetree"
            }
          }
        },
        {
          "begin": "//",
          "beginCaptures": {
            "1": {
              "name": "punctuation.whitespace.comment.leading.statetree"
            }
          },
          "end": "(?=$)",
          "name": "comment.line.statetree"
        }
      ]
    }
  }
}